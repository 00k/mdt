package mdt; 

message RpcTraceRequest {
    optional bool trace_enable = 1 [default = false];
    optional string db_name = 2;
    optional string table_name = 3;
    optional uint64 trace_id = 4;
    optional uint64 parent_span_id = 5;
    optional uint64 span_id = 6;
    optional uint64 cs = 7; // client send ts
}

message RpcTraceResponse {
    optional uint64 sr = 1; // server receive ts 
    optional uint64 ss = 2; // server send ts 
    optional uint64 cr = 3; // client receive ts 
}

message KVContext {
    optional bytes key = 1;
    optional bytes value = 2;
}

message FunctionAnnotation {
    optional uint64 timestamp = 2;
    //optional string function_name = 2; // service name or function name
    //optional bytes hardware_info = 3; // TODO: not support, user define
    //optional bytes software_info = 4; // TODO: not support, user define
    //optional bytes user_define_info = 5; // TODO: not support, user define
    optional string text_context = 6; // some readable annotation
    optional KVContext kv_context = 7; // KVContext list, use for machine analyse
}

// use for rpc invoke trace
message TraceIdentify {
    optional uint64 trace_id = 1;
    optional uint64 parent_span_id = 2;
    optional uint64 span_id = 3;
}

message FunctionSpan {
    optional TraceIdentify id = 1;
    optional string db_name = 3;
    optional string table_name = 5;
    repeated FunctionAnnotation annotations = 6; // FunctionAnnotation list
}



